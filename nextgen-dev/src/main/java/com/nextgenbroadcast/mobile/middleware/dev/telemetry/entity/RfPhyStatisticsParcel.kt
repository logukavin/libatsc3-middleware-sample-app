package com.nextgenbroadcast.mobile.middleware.dev.telemetry.entity

import android.os.Parcel
import android.os.Parcelable
import kotlinx.parcelize.Parceler
import kotlinx.parcelize.Parcelize
import kotlinx.parcelize.TypeParceler
import org.ngbp.libatsc3.middleware.android.phy.models.RfPhyStatistics

@Parcelize
@TypeParceler<RfPhyStatistics, RfPhyStatisticsParceler>()
class RfPhyStatisticsParcel(val payload: RfPhyStatistics): Parcelable

object RfPhyStatisticsParceler : Parceler<RfPhyStatistics> {
    override fun create(parcel: Parcel) = RfPhyStatistics(
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0
    ).apply {
        tuner_lock = parcel.readInt()
        demod_lock = parcel.readInt()
        plp_lock_any = parcel.readInt()
        plp_lock_all = parcel.readInt()
        plp_lock_by_setplp_index = parcel.readInt()
        cpu_status = parcel.readInt()
        rssi_1000 = parcel.readInt()
        snr1000_global = parcel.readInt()
        snr1000_l1b = parcel.readInt()
        snr1000_l1d = parcel.readInt()
        bootstrap_system_bw = parcel.readInt()
        bootstrap_ea_wakeup = parcel.readInt()
        plp_id_0 = parcel.readInt()
        modcod_valid_0 = parcel.readInt()
        plp_fec_type_0 = parcel.readInt()
        plp_mod_0 = parcel.readInt()
        plp_cod_0 = parcel.readInt()
        ber_pre_ldpc_0 = parcel.readInt()
        ber_pre_bch_0 = parcel.readInt()
        fer_post_bch_0 = parcel.readInt()
        total_fec_0 = parcel.readInt()
        total_error_fec_0 = parcel.readInt()
        plp_snr1000_0 = parcel.readInt()
        plp_id_1 = parcel.readInt()
        modcod_valid_1 = parcel.readInt()
        plp_fec_type_1 = parcel.readInt()
        plp_mod_1 = parcel.readInt()
        plp_cod_1 = parcel.readInt()
        ber_pre_ldpc_1 = parcel.readInt()
        ber_pre_bch_1 = parcel.readInt()
        fer_post_bch_1 = parcel.readInt()
        total_fec_1 = parcel.readInt()
        total_error_fec_1 = parcel.readInt()
        plp_snr1000_1 = parcel.readInt()
        plp_id_2 = parcel.readInt()
        modcod_valid_2 = parcel.readInt()
        plp_fec_type_2 = parcel.readInt()
        plp_mod_2 = parcel.readInt()
        plp_cod_2 = parcel.readInt()
        ber_pre_ldpc_2 = parcel.readInt()
        ber_pre_bch_2 = parcel.readInt()
        fer_post_bch_2 = parcel.readInt()
        total_fec_2 = parcel.readInt()
        total_error_fec_2 = parcel.readInt()
        plp_snr1000_2 = parcel.readInt()
        plp_id_3 = parcel.readInt()
        modcod_valid_3 = parcel.readInt()
        plp_fec_type_3 = parcel.readInt()
        plp_mod_3 = parcel.readInt()
        plp_cod_3 = parcel.readInt()
        ber_pre_ldpc_3 = parcel.readInt()
        ber_pre_bch_3 = parcel.readInt()
        fer_post_bch_3 = parcel.readInt()
        total_fec_3 = parcel.readInt()
        total_error_fec_3 = parcel.readInt()
        plp_snr1000_3 = parcel.readInt()
    }

    override fun RfPhyStatistics.write(parcel: Parcel, flags: Int) {
        parcel.writeInt(tuner_lock)
        parcel.writeInt(demod_lock)
        parcel.writeInt(plp_lock_any)
        parcel.writeInt(plp_lock_all)
        parcel.writeInt(plp_lock_by_setplp_index)
        parcel.writeInt(cpu_status)
        parcel.writeInt(rssi_1000)
        parcel.writeInt(snr1000_global)
        parcel.writeInt(snr1000_l1b)
        parcel.writeInt(snr1000_l1d)
        parcel.writeInt(bootstrap_system_bw)
        parcel.writeInt(bootstrap_ea_wakeup)
        parcel.writeInt(plp_id_0)
        parcel.writeInt(modcod_valid_0)
        parcel.writeInt(plp_fec_type_0)
        parcel.writeInt(plp_mod_0)
        parcel.writeInt(plp_cod_0)
        parcel.writeInt(ber_pre_ldpc_0)
        parcel.writeInt(ber_pre_bch_0)
        parcel.writeInt(fer_post_bch_0)
        parcel.writeInt(total_fec_0)
        parcel.writeInt(total_error_fec_0)
        parcel.writeInt(plp_snr1000_0)
        parcel.writeInt(plp_id_1)
        parcel.writeInt(modcod_valid_1)
        parcel.writeInt(plp_fec_type_1)
        parcel.writeInt(plp_mod_1)
        parcel.writeInt(plp_cod_1)
        parcel.writeInt(ber_pre_ldpc_1)
        parcel.writeInt(ber_pre_bch_1)
        parcel.writeInt(fer_post_bch_1)
        parcel.writeInt(total_fec_1)
        parcel.writeInt(total_error_fec_1)
        parcel.writeInt(plp_snr1000_1)
        parcel.writeInt(plp_id_2)
        parcel.writeInt(modcod_valid_2)
        parcel.writeInt(plp_fec_type_2)
        parcel.writeInt(plp_mod_2)
        parcel.writeInt(plp_cod_2)
        parcel.writeInt(ber_pre_ldpc_2)
        parcel.writeInt(ber_pre_bch_2)
        parcel.writeInt(fer_post_bch_2)
        parcel.writeInt(total_fec_2)
        parcel.writeInt(total_error_fec_2)
        parcel.writeInt(plp_snr1000_2)
        parcel.writeInt(plp_id_3)
        parcel.writeInt(modcod_valid_3)
        parcel.writeInt(plp_fec_type_3)
        parcel.writeInt(plp_mod_3)
        parcel.writeInt(plp_cod_3)
        parcel.writeInt(ber_pre_ldpc_3)
        parcel.writeInt(ber_pre_bch_3)
        parcel.writeInt(fer_post_bch_3)
        parcel.writeInt(total_fec_3)
        parcel.writeInt(total_error_fec_3)
        parcel.writeInt(plp_snr1000_3)
    }
}
